"use strict";(self.webpackChunkmonosi_documentation=self.webpackChunkmonosi_documentation||[]).push([[5739],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return g}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,m=d["".concat(l,".").concat(g)]||d[g]||p[g]||a;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){n(7294)},6396:function(e,t,n){n(7294),n(2389),n(9443);n(3616)},5651:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=(n(8215),n(6396),["components"]),u={id:"bigquery",title:"BigQuery Integration",sidebar_label:"BigQuery"},l=void 0,c={unversionedId:"integrations/bigquery",id:"integrations/bigquery",title:"BigQuery Integration",description:"Monosi supports BigQuery data warehouse connections. Currently, only authentication through a service_account.json file is supported. If you do not have a service account, please follow the instructions to create one here.",source:"@site/docs/integrations/bigquery.md",sourceDirName:"integrations",slug:"/integrations/bigquery",permalink:"/docs/integrations/bigquery",editUrl:"https://github.com/monosidev/monosi/tree/master/documentation/docs/integrations/bigquery.md",tags:[],version:"current",frontMatter:{id:"bigquery",title:"BigQuery Integration",sidebar_label:"BigQuery"},sidebar:"sidebarUserGuide",previous:{title:"PostgreSQL",permalink:"/docs/integrations/postgresql"},next:{title:"Slack",permalink:"/docs/integrations/slack"}},s=[{value:"Configuration Details",id:"configuration-details",children:[],level:2}],p={toc:s};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Monosi supports BigQuery data warehouse connections. Currently, only authentication through a ",(0,a.kt)("inlineCode",{parentName:"p"},"service_account.json")," file is supported. If you do not have a service account, please follow the instructions to create one ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.google.com/docs/authentication/getting-started"},"here"),"."),(0,a.kt)("p",null,"If you require other forms of authentication, please ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/monosidev/monosi/issues/new?assignees=&labels=&template=feature_request.md"},"open an issue"),"."),(0,a.kt)("img",{src:"/img/datasource/bigquery_connection.png",alt:"BigQuery Integration"}),(0,a.kt)("h2",{id:"configuration-details"},"Configuration Details"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"project"),(0,a.kt)("td",{parentName:"tr",align:null},"The name of the BigQuery project you want to connect"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"dataset"),(0,a.kt)("td",{parentName:"tr",align:null},"The name of the dataset you want to connect"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"service_account"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"service_account.json")," file associated with your IAM"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")))))}d.isMDXComponent=!0}}]);